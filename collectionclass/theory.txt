What is difference between Collection and Collections class in java
The Collection interface provides a standard set of methods for managing a group of objects, known as a collection. Some common examples of classes that implement the Collection interface include ArrayList, LinkedList, and HashSet.

On the other hand, the Collections class is a utility class that contains a number of static methods for working with collections. Some of the methods in the Collections class allow you to sort, search, and manipulate collections in various ways. For example, you can use the sort method to sort the elements in a list, or the reverse method to reverse the order of the elements in a list.


Why we need collection interface?
The Collection interface in Java is the root interface for all the collections in the Java Collection Framework. It provides a set of methods that all collections should implement, such as add(), remove(), and contains(). These methods allow collections to be used in a consistent manner, regardless of the specific implementation of the collection. 
For example, a List collection can be used to store a list of strings, and then you can use the list's add method to add new strings to the list, or its contains method to check if a particular string is in the list.


Why we need collections class?
The Collections class, provides utility methods that are commonly used when working with collections. These methods can make it easier to perform operations on collections, such as sorting or searching. For example, you can use the sort method in the Collections class to sort a List, or the binarySearch method to search for a specific element in a List.


What is ArrayList?
An ArrayList is a dynamic data structure in Java that allows you to store and access a large number of elements efficiently. It is part of the Java Collections Framework, which is a set of classes and interfaces that provide a standard way of working with collections of objects.
ArrayList is similar to an array, but it can grow and shrink dynamically as elements are added or removed. This makes it a more flexible and convenient data structure to use compared to an array.


When are they useful?
One main advantage of an ArrayList over other lists, such as a LinkedList or a Vector, is that it provides faster access to the elements by index. This is because an ArrayList uses an array data structure to store the elements, and arrays provide fast random access to the elements by index. 


Usecase?
Imagine you are creating a game or application that presents the user with a list of options, and the user can select one or more options to perform an action. You could use an ArrayList to store the selected options, and then perform the action based on the items in the list.



What is Wrapper Class?
A wrapper class is a class in Java that encapsulates a primitive data type. This allows you to treat primitive data types like objects, which can be useful in certain situations.